# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      # - name: Install FiraCode font
      #   run: |
      #     sudo apt update
      #     sudo apt install fonts-firacode
      #     sudo apt-get install -y texlive-fonts-recommended
      #     sudo updmap-sys --enable Map=firacode.map
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          # # Name of the artifact to upload.
          # # Optional. Default is 'artifact'
          name: old-pdf
      
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: main.pdf
          overwrite: true
      - name: Delete old main.pdf
        run: rm main.pdf
      - name: List files
        run: ls
      - name: Compile LaTeX document
        continue-on-error: true
        uses: dante-ev/latex-action@latest
        with:
          root_file: main.tex
          compiler: lualatex
          args: -interaction=nonstopmode -shell-escape
      - name: Confirm pdf was created
        run: |
          OUTPUT=$(ls | grep "main.pdf")
          [ $OUTPUT == "main.pdf" ] && exit 0 || exit 1
      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          # # Name of the artifact to upload.
          # # Optional. Default is 'artifact'
          name: pre-switch
      
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: main.pdf
          overwrite: true
      - name: Checkout compiled-pdf branch
        continue-on-error: true
        run: |
          git stash
          git switch compiled-pdf
          git stash apply
      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          # # Name of the artifact to upload.
          # # Optional. Default is 'artifact'
          name: post-stash-apply
      
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: main.pdf
          overwrite: true
      - name: List files
        if: always()
        run: ls
      - name: PWD
        if: always()
        run: pwd
      - name: Configure Git user
        run: | 
          git config --global user.name 'donovanclay'
          git config --global user.email 'donovan@donovanclay.com'
      - name: Commit new PDF file
        run: |
          current_date_time=$(date)
          git add main.pdf
          git add main.log
          git rm main.aux
          git commit -m "update main.pdf @ $current_date_time"
      - name: Push changes
        # env:
          # PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          # git push https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/donovanclay/resume.git compiled-pdf
          git push
      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          # # Name of the artifact to upload.
          # # Optional. Default is 'artifact'
          name: post-push
      
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: main.pdf
          overwrite: true
